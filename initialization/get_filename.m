function filename = get_filename(cycle, sepparam, geoparam, FOI)
wheel_type = sepparam.wheel_type;
shape = geoparam.shape;
if wheel_type == 1
    if shape == 1
        filename = ['GrdData/' FOI '/' 'cycle' num2str(cycle) ...
            'w' num2str(geoparam.omega) 'Hsg' num2str(geoparam.sigmah) 'Ssg' num2str(geoparam.sigmasw) ...
            'Rsg' num2str(geoparam.Rsigma) 'FT' num2str(geoparam.fillet_mode) 'RA' num2str(geoparam.Rarea) ...
            'RAM' num2str(geoparam.RA_mode)] ;
    elseif shape == 2
        filename = ['GrdData/' FOI '/' 'cycle' num2str(cycle) ...
            'Hsg' num2str(geoparam.sigmah) 'Rsg' num2str(geoparam.Rsigma) 'RA' num2str(geoparam.Rarea)];
    else
        filename = ['GrdData/' FOI '/' 'cycle' num2str(cycle) 'xi' num2str(geoparam.xi) ...
            'Hsg' num2str(geoparam.sigmah) 'Rsg' num2str(geoparam.Rsigma)] ;
    end
elseif wheel_type == 2
    if sepparam.LS_mode == 1
        if shape == 1
            filename = ['GrdData/' FOI '/' 'cycle' num2str(cycle) 'LS' num2str(sepparam.LS_mode) ...
                'tgw' num2str(sepparam.theta) 'Sgap' num2str(sepparam.SaveGap) ...
                'Rgap' num2str(sepparam.RowGap) 'w' num2str(geoparam.omega)  ...
                'Hsg' num2str(geoparam.sigmah) 'Ssg' num2str(geoparam.sigmasw) 'Rsg' num2str(geoparam.Rsigma) ...
                'FT' num2str(geoparam.fillet_mode) 'RA' num2str(geoparam.Rarea) 'RAM' num2str(geoparam.RA_mode)] ;
        elseif shape == 2
            filename = ['GrdData/' FOI '/' 'cycle' num2str(cycle) ...
                'tgw' num2str(sepparam.theta) 'Sgap' num2str(sepparam.SaveGap) 'Rgap' num2str(sepparam.RowGap) ...
                'Hsg' num2str(geoparam.sigmah) 'Rsg' num2str(geoparam.Rsigma) 'RA' num2str(geoparam.Rarea)] ;
        else
            filename = ['GrdData/' FOI '/' 'cycle' num2str(cycle) ...
                'tgw' num2str(sepparam.theta) 'Sgap' num2str(sepparam.SaveGap) ...
                'Rgap' num2str(sepparam.RowGap)  'xi' num2str(geoparam.xi) ...
                'Hsg' num2str(geoparam.sigmah) 'Rsg' num2str(geoparam.Rsigma)] ;
        end
    else
        if shape == 1
            filename = ['GrdData/' FOI '/' 'cycle' num2str(cycle) ...
                'w' num2str(geoparam.omega)  ...
                'Hsg' num2str(geoparam.sigmah) 'Ssg' num2str(geoparam.sigmasw) 'Rsg' num2str(geoparam.Rsigma) ...
                'FT' num2str(geoparam.fillet_mode) 'RA' num2str(geoparam.Rarea) 'RAM' num2str(geoparam.RA_mode)] ;
        elseif shape == 2
            filename = ['GrdData/' FOI '/' 'cycle' num2str(cycle) ...
                'Hsg' num2str(geoparam.sigmah) 'Rsg' num2str(geoparam.Rsigma) 'RA' num2str(geoparam.Rarea)] ;
        else
            filename = ['GrdData/' FOI '/' 'cycle' num2str(cycle) ...
                'xi' num2str(geoparam.xi) 'Hsg' num2str(geoparam.sigmah) 'Rsg' num2str(geoparam.Rsigma)] ;
        end
    end
elseif wheel_type == 3
    if shape == 1
        filename = ['GrdData/' FOI '/' 'cycle' num2str(cycle) ...
            'tgw' num2str(sepparam.theta) 'kd' num2str(sepparam.k_dev) 'Sgap' num2str(sepparam.SepGap) ...
            'Rgap' num2str(sepparam.RowGap) 'w' num2str(geoparam.omega)  ...
            'Hsg' num2str(geoparam.sigmah) 'Ssg' num2str(geoparam.sigmasw) 'Rsg' num2str(geoparam.Rsigma) ...
            'FT' num2str(geoparam.fillet_mode) 'RA' num2str(geoparam.Rarea) 'RAM' num2str(geoparam.RA_mode)] ;
    elseif shape == 2
        filename = ['GrdData/' FOI '/' 'cycle' num2str(cycle) ...
            'tgw' num2str(sepparam.theta) 'kd' num2str(sepparam.k_dev) 'Sgap' num2str(sepparam.SepGap) ...
            'Rgap' num2str(sepparam.RowGap) ...
            'Hsg' num2str(geoparam.sigmah) 'Rsg' num2str(geoparam.Rsigma) 'RA' num2str(geoparam.Rarea)] ;
    else
        filename = ['GrdData/' FOI '/' 'cycle' num2str(cycle) ...
            'tgw' num2str(sepparam.theta) 'kd' num2str(sepparam.k_dev) 'Sgap' num2str(sepparam.SepGap) ...
            'Rgap' num2str(sepparam.RowGap)  'xi' num2str(geoparam.xi) ...
            'Hsg' num2str(geoparam.sigmah) 'Rsg' num2str(geoparam.Rsigma)] ;
    end
end
end